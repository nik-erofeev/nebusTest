name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Install dependencies with Poetry
      run: |
        poetry install
    - name: Run black
      run: poetry run black --check .

    - name: Run ruff
      run: poetry run ruff check .

    - name: Run pre-commit
      uses: pre-commit/action@v3.0.1

  tests:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python-version: [3.12]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies with Poetry
        run: |
          poetry install

      - name: Set up environment variables
        run: |
          echo "DB__HOST=pass" >> $GITHUB_ENV
          echo "DB__PORT=1234" >> $GITHUB_ENV
          echo "DB__USER=pass" >> $GITHUB_ENV
          echo "DB__PASSWORD=pass" >> $GITHUB_ENV
          echo "DB__NAME=pass" >> $GITHUB_ENV


      - name: Run tests with Poetry
        run: |
          poetry run pytest -W ignore


